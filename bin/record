#!/usr/bin/env bash

C="--codec=h264_vaapi"
D="--device=/dev/dri/renderD128"

dir="$HOME/media/recordings"
a_flag="combined_audio.monitor" # audio sources
a_label="fullaudio"
s_flag=""
s_label="fullscreen"

while getopts 'a:s:d:' flag; do
    case "$flag" in
        a) a_flag="$OPTARG" ;;
        s) s_flag="$OPTARG" ;;
        d) dir="$OPTARG" ;;
        *) exit 1 ;;
    esac
done

if [[ $a_flag == "combined_audio.monitor" ]]; then

    # sources
    input_source="alsa_output.usb-Focusrite_Scarlett_Solo_USB_Y70ZEU921E21FF-00.analog-stereo"
    output_source="bluez_output.14_3F_A6_10_A1_B5.1.monitor"

    # create a null sink (virtual audio device)
    combined=$(pactl load-module module-null-sink sink_name=combined_audio)

    # scarlette needs to be remapped to mono audio
    remapped=$(pactl load-module module-remap-source master="$input_source" source_name=remapped_source channels=1 channel_map=mono)

    # create two audio loopbacks, one for each audio source
    input=$(pactl load-module module-loopback source=remapped_source sink=combined_audio)
    output=$(pactl load-module module-loopback source="$output_source" sink=combined_audio)
fi

case "$a_flag" in
    source) a="--audio=$input_source"; a_label="source" ;;
    sink) a="--audio=$output_source"; a_label="sink" ;;
    none) a=""; a_label="muted" ;;
    *) a="--audio=$a_flag" ;;
esac



if [[ "$s_flag" == "slurp" ]]; then
    slurp="$(slurp)"
    g="-g $slurp"
    s_label=$(echo "$slurp" | awk -F ' ' '{print $2}')
else
    g=""
fi

label="($s_label-$a_label)"

f="-f$dir/$(date "+%T %m-%d $label").mp4"

cleanup() {
    if [[ $a_flag == "combined_audio.monitor" ]]; then
        pactl unload-module "$combined"
        pactl unload-module "$input"
        pactl unload-module "$output"
        pactl unload-module "$remapped"
    fi

    dunstify "üé¨ screen recording ended" -a "wf-end" -u low
}

dunstify "üìΩÔ∏è recording $label" -a "wf-start" -u low
wf-recorder "$C" "$D" "$a" "$f" "$g"

# wait for the recording to finish (press Ctrl+C to stop the recording)
echo "Press Ctrl+C to stop the recording and clean up PulseAudio modules..."

# catch Ctrl+C and call the cleanup function
trap cleanup EXIT
