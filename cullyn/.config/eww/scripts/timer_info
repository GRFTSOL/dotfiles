#!/usr/bin/env bash

timer () {
    IFS=":" read -ra timer <<<"$(tail -n 1 "/tmp/.timer")"
    hr=${timer[0]#0}
    min=${timer[1]#0}

    if [[ "$1" == "up" ]]; then
        ((min+=$2))
        if [[ $min -ge 60 ]]; then
            ((hr+=1))
            ((min-=60))
        fi
    elif [[ $hr -gt 0 ]] || [[ $min -gt 0 ]]; then
            ((min-=$2))
    fi

    if [[ $min -lt 0 ]] && [[ $hr -gt 0 ]]; then
        ((hr-=1))
        ((min+=60))
    fi

    printf "%02d:%02d\n" "$hr" "$min" >> "/tmp/.timer"
}

timer_status () {
    countdown=false
    if [[ $1 == "start" ]]; then
       countdown=true
       notify-send "timer started!"
    fi

    while "$countdown"; do
        IFS=":" read -ra timer <<<"$(tail -n 1 "/tmp/.timer")"
        hr=${timer[0]#0}
        min=${timer[1]#0}

        if [[ $hr -eq 0 ]] && [[ $min -eq 0 ]]; then
            countdown=false
            notify-send "timer done!"
            break
        fi

        until_next_min=$(( 60 - $(date +%-S) ))
        notify-send "$until_next_min"
        sleep "$until_next_min"
        timer "down" 1

    done
}


reset () {
    case "$1" in
        alarm) echo "00:00" > "/tmp/.alarm"
        ;;
        timer) echo "00:00" > "/tmp/.timer"
        ;;
    esac

}

mk_temp () {
    echo "00:00" > "/tmp/.alarm"
    echo "00:00" > "/tmp/.timer"
}

"$@"
