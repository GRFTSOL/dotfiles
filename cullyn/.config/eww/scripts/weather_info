#!/usr/bin/env bash

dir=/tmp/eww/weather
weather_json="$dir/weather.json"
air_json="$dir/air.json"
wait=60

get_json () {
    read -ra location <<<"$(<"$HOME/.local/.location")"
    lat="${location[0]}"
    lon="${location[1]}"
    api=$(<"$HOME/.local/.owm_api_key")
    units="metric"
    weahterUrl="https://api.openweathermap.org/data/3.0/onecall?lat=$lat&lon=$lon&units=$units&appid=$api"
    airUrl="http://api.openweathermap.org/data/2.5/air_pollution/forecast?lat=$lat&lon=$lon&appid=$api"

    while true; do
        online=1
        connection () {
            nc -z 8.8.8.8 53  >/dev/null 2>&1
            online=$?
        }

        while [[ "$online" -eq 1 ]]; do
            connection
            sleep 0.5
        done

        curl "$weahterUrl" | jq > "$weather_json"
        curl "$airUrl" | jq > "$air_json"
        sleep "$wait"
    done
}

id () {
    id=$(jq -r ".current.weather[0].id" "$weather_json")
    echo "$id" >> "$dir/id"
}

icon () {
    icon=$(jq -r ".current.weather[0].icon" "$weather_json")
    echo "$icon" >> "$dir/icon"
}

temp () {
    temp=$(jq -r ".current.feels_like" "$weather_json")
    echo "$temp" | awk '{print int($1+0.5)}' >> "$dir/temp"
}

main () {
    main=$(jq -r ".current.weather[0].main" "$weather_json")
    if [[ -z "$main" ]]; then
        echo "false"
    else
        echo "$main" >> "$dir/main"
        echo "true"
    fi
}

cond () {
    cond=$(jq -r ".current.weather[0].description" "$weather_json")
    echo "$cond" >> "$dir/cond"
}

aqi () {
    aqi=$(jq -r ".list[0].main.aqi" "$air_json")
    echo "$aqi" >> "$dir/aqi"
}

uvi () {
    uvi=$(jq -r ".current.uvi" "$weather_json")
    echo "$uvi" | awk '{print int($1+0.5)}' >> "$dir/uvi"
}

rain () {
    rain_chance=$(jq -r ".daily[0].pop" "$weather_json")
    echo "$rain_chance * 100" | awk '{print int($1+0.5)}' >> "$dir/rain"
}

wind () {
    wind_speed=$(jq -r ".current.wind_speed" "$weather_json")
    echo "$wind_speed" | awk '{print int($1+0.5)}' >> "$dir/wind"
}

beaufort () {
    wind_speed=$(jq -r ".current.wind_speed" "$weather_json")
    knots=$(echo "$wind_speed * 1.943844" | bc)
    knots=$(echo "$knots" | awk '{print int($1+0.5)}')

    if [[ knots -lt 1 ]]; then
        beaufort_force=0
        desc="calm"
    elif [[ knots -lt 4 ]]; then
        beaufort_force=1
        desc="light air"
    elif [[ knots -lt 7 ]]; then
        beaufort_force=2
        desc="light breeze"
    elif [[ knots -lt 11 ]]; then
        beaufort_force=3
        desc="gentle breeze"
    elif [[ knots -lt 17 ]]; then
        beaufort_force=4
        desc="moderate breeze"
    elif [[ knots -lt 22 ]]; then
        beaufort_force=5
        desc="fresh breeze"
    elif [[ knots -lt 28 ]]; then
        beaufort_force=6
        desc="strong breeze"
    elif [[ knots -lt 34 ]]; then
        beaufort_force=7
        desc="near gale"
    elif [[ knots -lt 41 ]]; then
        beaufort_force=8
        desc="gale"
    elif [[ knots -lt 48 ]]; then
        beaufort_force=9
        desc="strong gale"
    elif [[ knots -lt 56 ]]; then
        beaufort_force=10
        desc="storm"
    elif [[ knots -lt 64 ]]; then
        beaufort_force=11
        desc="violent storm"
    else
        beaufort_force=12
        desc="hurricane"
    fi

    case "$beaufort_force" in
        0) icon="" ;;
        1) icon="" ;;
        2) icon="" ;;
        3) icon="" ;;
        4) icon="" ;;
        5) icon="" ;;
        6) icon="" ;;
        7) icon="" ;;
        8) icon="" ;;
        9) icon="" ;;
        10) icon="" ;;
        11) icon="" ;;
        12) icon="" ;;
    esac

    echo "$icon" >> "$dir/bf-icon"
    echo "$desc" >> "$dir/bf-desc"
}

continuous () {
    while true; do
        valid_json=$(main)
        while [[ "$valid_json" == "false" ]] ; do
            sleep 0.25
            valid_json=$(main)
        done
        id; icon; temp; main; cond; aqi; uvi; wind; rain; beaufort
        sleep "$wait"
    done
}

"$@"
