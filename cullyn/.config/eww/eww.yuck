; ================================= windows ===================================
; {{{

(defvar spacing 16)

(defwindow sound
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "30%" :anchor "top left")
  (box :class "sound" :halign "start" :space-evenly false :spacing spacing
    (music) (audio)
  )
)

(defwindow today
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "39%" :anchor "top center")
  (centerbox :class "today"
    (weather) (time) (date)
  )
)

(defwindow computer
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "30%" :anchor "top right")
  (box :class "sound" :halign "end" :space-evenly false :spacing spacing
    (cpu) (gpu) (temp) (memory) (disk) (user)
  )
)

(defwindow actions
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "33%" :anchor "bottom left")
  (actions)
)

(defwindow workspaces
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "33%" :anchor "bottom center")
  (workspaces)
)

(defwindow network
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "33%" :anchor "bottom right")
  (network)
)


; }}}
; =============================================================================

; ================================= widgets ===================================

; =============================================================================
; {{{

(defwidget slide-n-fade [direction bool]
  (revealer
    :transition "${direction == "left" ? "slideleft" : "slideright" }"
    :reveal bool
    (revealer
      :transition "crossfade"
      :reveal bool
      (children)
    )
  )
)

; }}}
; ================================= sound =====================================
; ┌┬┐┬ ┬┌─┐┬┌─┐
; ││││ │└─┐││
; ┴ ┴└─┘└─┘┴└─┘
; {{{

(defvar player "youtube-music-desktop-app")
(deflisten status 'playerctl --follow status')
(defpoll progress :initial 1 :interval "0.5s" "scripts/music_info duration")
(defpoll song     :interval "1s"   "scripts/music_info song")
(defpoll artist   :interval "1s"   "scripts/music_info artist")
(defpoll volume   :interval "1s"   "scripts/music_info volume")

(defwidget music []
  (box :class "music" :space-evenly false :spacing spacing
    (music-cover) (music-info)
  )
)

(defpoll art-url :interval "1s" "scripts/music_info cover")
(defwidget music-cover []
  (box :class "music-cover" :style "background-image: url('${art-url}');")
)

(defwidget music-progress []
  (box :class "music-progress" :space-evenly false :spacing spacing
    (circular-progress
      :class "music-progress-circle"
      :value progress
      :start-at 75
      :thickness 2
      :clockwise true
      (box
        :class "music-progress-circle-icon"
        (eventbox
          :class "music-${matches(status, "Playing") ? "playing" : "paused" }"
          :onclick "playerctl --player=${player} play-pause"
          (label :text "${matches(status, "Playing") ? "" : "奈"}")
        )
      )
    )
  )
)

(defwidget music-info []
  (box :class "music-info" :space-evenly false :spacing spacing
    (music-progress)
    (label :class "music-song"   :markup song)
    (label :class "music-artist" :markup artist)
    (label :class "music-volume" :markup volume )
  )
)
; }}}
; ┌─┐┬ ┬┌┬┐┬┌─┐
; ├─┤│ │ ││││ │
; ┴ ┴└─┘─┴┘┴└─┘
; {{{

(deflisten source :initial '100' 'tail -F /tmp/eww/source')
(deflisten sink :intial '50' 'tail -F /tmp/eww/sink')

(defwidget audio []
  (box :class "audio" :space-evenly false :spacing spacing
    (audio-control :content "source" :var source :icon "")
    (audio-control :content "sink" :var sink :icon "墳")
  )
)

(defwidget audio-control [content icon var]
  (eventbox
    :class "audio-${content}"
    :onclick "alacritty --title='terminalfloat' -e pulsemixer & disown"
    :onscroll "scripts/pulse_info change_volume ${content} {} 1"
    (label :class "audio-${content}-label" :text "${icon} ${var}")
  )
)
; }}}
; =============================================================================

; ================================= today =====================================
; ┬ ┬┌─┐┌─┐┌┬┐┬ ┬┌─┐┬─┐
; │││├┤ ├─┤ │ ├─┤├┤ ├┬┘
; └┴┘└─┘┴ ┴ ┴ ┴ ┴└─┘┴└─
; {{{

; TODO CHANGE ALL THIS INTO SINGLE LISTENING JSON
(deflisten w-id :initial "800" 'tail -F "/tmp/eww/weather/id"')
(deflisten w-icon 'tail -F "/tmp/eww/weather/icon"')
(deflisten w-temp 'tail -F "/tmp/eww/weather/temp"')
(deflisten w-main 'tail -F "/tmp/eww/weather/main"')
(deflisten w-cond 'tail -F "/tmp/eww/weather/cond"')
(deflisten w-aqi  'tail -F "/tmp/eww/weather/aqi"')
(deflisten w-uvi  'tail -F "/tmp/eww/weather/uvi"')
(deflisten w-rain 'tail -F "/tmp/eww/weather/rain"')
(deflisten w-wind 'tail -F "/tmp/eww/weather/wind"')
(deflisten w-bf-i 'tail -F "/tmp/eww/weather/bf-icon"')
(deflisten w-bf-d 'tail -F "/tmp/eww/weather/bf-desc"')
(defvar weather-info false)

(defwidget weather []
  (eventbox
    :onhover "eww update weather-info=true"
    :onhoverlost "eww update weather-info=false"
    (box
      :class "weather" :halign "end" :space-evenly false :spacing 8
      (box
        :class "weather-icons"
        :style "background-image: url('assets/owm-icons/${w-icon}.png');"
      )
      (label :markup "<b>${w-temp}<sup></sup></b>")
      (label
        :class "weather-label"
        :markup {matches(w-id, "(800)|(7[0-9][0-9])") ?
          "<b>${w-main}</b>  ${w-aqi} " :
          "<b>${w-main}</b> <small>(<i>${w-cond}</i>)</small>"}
      )
      (slide-n-fade :bool weather-info :direction "right"
        (label
          :class "weather-label"
          :markup "${w-uvi > 0 ? " 履 ${w-uvi}  " : "<small> </small>"} ${w-rain}<small>%</small> ${w-bf-i} ${w-wind}<sub>m/s</sub>"
        )
      )
    )
  )
)
; }}}
; ┌┬┐┬┌┬┐┌─┐
;  │ ││││├┤
;  ┴ ┴┴ ┴└─┘
; {{{

(defpoll time :interval "1s"
  `date +'{"hour":"%H", "minute":"%M", "second":"%S"}'`
)
(deflisten clockface-hour "scripts/date_info clockface-hour")
(deflisten clockface-minute "scripts/date_info clockface-minute")
(defvar hour-active false)
(defvar minute-active false)
(defvar fine-adjust false)
(defvar timer-visible false)
(deflisten alarm-current 'tail -F /tmp/eww/alarm')
(deflisten timer-current 'tail -F /tmp/eww/timer')

(defwidget time []
  (eventbox
    :onhover "eww update timer-visible=true"
    :onhoverlost "eww update timer-visible=false"
    :onmiddleclick "eww update fine-adjust=${fine-adjust ? "false" : "true"}"
    (box
      :class "time"
      :halign "center"
      :space-evenly false
      :spacing 3
      (alarm)
      (clock :child "hour" :text {time.hour} :bool hour-active)
      (clockface)
      (clock :child "minute" :text {time.minute} :bool minute-active)
      (timer)
    )
  )
)

(defwidget clock [child bool text]
  (eventbox
    :class "time-${child} time-${child}-${bool ? "active" : "inactive"}"
    :onhover "eww update ${child}-active=true"
    :onhoverlost "eww update ${child}-active=false"
    :onclick "firefox-developer-edition https://calendar.google.com/calendar/u/0/r"
    :onrightclick "firefox-developer-edition https://calendar.google.com/calendar/u/0/r/eventedit?state=%5B%5D"
    (label :class "time-text" :text text)
  )
)

(defwidget clockface []
  (box
    :class "time-clockface"
    :orientation "v"
    :spacing -4
    :space-evenly false
    (clock :child "hour" :text clockface-hour :bool hour-active)
    (clock :child "minute" :text clockface-minute :bool minute-active)
  )
)

(defwidget time-revealer [app direction child bool icon text subtext]
  (slide-n-fade
    :bool timer-visible
    :direction {direction == "left" ? "right" : "left"}
    (eventbox
      :class "time-${app} time-${child}-${bool ? "active" : "inactive" }"
      :onhover "eww update ${child}-active=true"
      :onhoverlost "eww update ${child}-active=false"
      :onclick "scripts/timer_info ${app}_status & disown"
      :onscroll "scripts/timer_info ${app} {} ${fine-adjust ? 1 : 15}"
      :onrightclick "scripts/timer_info reset ${app}"
      (box :class "time-${app}" :space-evenly false :spacing 6
        {direction == "left" ? text : ""}
        (box
          :orientation "v"
          :valign "center"
          :space-evenly false
          :spacing -1
          (label :class "time-${app}-icon" :text icon)
          (label :class "time-${app}-subtext" :text subtext)
        )
        {direction == "right" ? text : "" }
      )
    )
  )
)

(defwidget alarm []
  (time-revealer
    :app "alarm"
    :direction "left"
    :child "hour"
    :bool hour-active
    :text alarm-current
    :icon ""
    :subtext {fine-adjust ? "駱" : ""}
  )
)

(defwidget timer []
  (time-revealer
    :app "timer"
    :direction "right"
    :child "minute"
    :bool minute-active
    :text timer-current
    :icon "羽"
    :subtext {time.second}
  )
)
; }}}
; ┌┬┐┌─┐┌┬┐┌─┐
;  ││├─┤ │ ├┤
; ─┴┘┴ ┴ ┴ └─┘
; {{{

(deflisten week 'scripts/date_info week')
(deflisten dayjson 'scripts/date_info day')
(defvar date-extra false)

(defwidget date []
  (eventbox
    :onhover "eww update date-extra=true"
    :onhoverlost "eww update date-extra=false"
    (box
      :class "date"
      :halign "start"
      :space-evenly false
      :spacing 10
      (slide-n-fade
        :bool date-extra
        :direction "left"
        (label :class "date-week" :text "冀 ${week}")
      )
      (box
        :class "date-general"
        :space-evenly false
        :spacing 6
        (label :class "date-weekday" :text " ${dayjson.weekday},")
        (label :class "date-month" :text "${dayjson.month}")
        (label :class "date-month" :text "${dayjson.day}")
      )
    )
  )
)

; }}}
; =============================================================================

; ================================= computer ==================================
; ┌─┐┌─┐┬ ┬
; │  ├─┘│ │
; └─┘┴  └─┘
; {{{

(defvar cores "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]")
(defwidget num-to-block [load]
  (label
    :text {
      load < 12.5  ? "▁" :
      load < 25    ? "▂" :
      load < 37.5  ? "▃" :
      load < 50    ? "▄" :
      load < 62.5  ? "▅" :
      load < 75    ? "▆" :
      load < 88.5  ? "▇" : "█"
    }
    :class {
      load < 5   ? "cpu-1" :
      load < 10  ? "cpu-2" :
      load < 20  ? "cpu-3" :
      load < 30  ? "cpu-4" :
      load < 40  ? "cpu-5" :
      load < 50  ? "cpu-6" :
      load < 60  ? "cpu-7" :
      load < 70  ? "cpu-8" :
      load < 80  ? "cpu-9" :
      load < 90  ? "cpu-10" :
      load < 95  ? "cpu-11" : "cpu-12"
    }
  )
)



(defwidget core [num]
  (label :text "${EWW_CPU.cores[num].usage}")
)

(defwidget cpu []
  (box :class "cpu" :space-evenly false :spacing 2
    (label
      :text ""
      :class "cpu-icon ${
        EWW_CPU.avg < 30  ? "cpu-5" :
        EWW_CPU.avg < 40  ? "cpu-6" :
        EWW_CPU.avg < 50  ? "cpu-7" :
        EWW_CPU.avg < 60  ? "cpu-8" :
        EWW_CPU.avg < 70  ? "cpu-9" :
        EWW_CPU.avg < 80  ? "cpu-10" :
        EWW_CPU.avg < 90  ? "cpu-11" : "cpu-12" }"
    )
    (for num in cores
      (num-to-block :load {EWW_CPU.cores[num].usage})
    )
  )
)

; }}}
; ┌─┐┌─┐┬ ┬
; │ ┬├─┘│ │
; └─┘┴  └─┘
; {{{

(defwidget gpu []
  (box :class "gpu"
  "⌬"
  )
)
; }}}
; ┌┬┐┌─┐┌┬┐┌─┐
;  │ ├┤ │││├─┘
;  ┴ └─┘┴ ┴┴
; {{{



(defwidget temp []
  (box :class "temp"
  "   ${EWW_TEMPS.TCTL}"
  )
)
; }}}
; ┌┬┐┌─┐┌┬┐┌─┐┬─┐┬ ┬
; │││├┤ ││││ │├┬┘└┬┘
; ┴ ┴└─┘┴ ┴└─┘┴└─ ┴
; {{{

(defwidget memory []
  (box :class "memory"
  ; "ﮕ ${EWW_RAM.used_mem}"
  "ﮕ"
  )
)
; }}}
; ┌┬┐┬┌─┐┬┌─
;  │││└─┐├┴┐
; ─┴┘┴└─┘┴ ┴
; {{{

(defwidget disk []

  (box :class "disk"
    " ${round(EWW_DISK["/"].used_perc,0)}%"
  )
)
; }}}
; ┬ ┬┌─┐┌─┐┬─┐
; │ │└─┐├┤ ├┬┘
; └─┘└─┘└─┘┴└─
; {{{

(defvar userUrl '/home/cullyn/.config/eww/assets/nosvagor.png')
(defwidget user []
  (box :class "user" :style "background-image: url('${userUrl}');")
)
; }}}
; =============================================================================

; ================================= actions ===================================
; pacman {{{

(defwidget actions []
    (box :class "actions" :space-evenly false :spacing spacing
    (pacman)
  )
)

(defwidget pacman [] "pacman")

; }}}
; =============================================================================

; ================================= workspaces ================================
; {{{

(deflisten workspace 'tail -F /tmp/eww/workspace')
(defwidget workspaces []
  (box :class "workspaces" :halign "center" :space-evenly false :spacing spacing
    (eventbox
      :onclick "hyprctl dispatch workspace 1"
      (label :text ""
        :class {matches(workspace,1) ? 'workspace-1 active' : 'workspace-1'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 2"
      (label :text ""
        :class {matches(workspace,2) ? 'workspace-2 active' : 'workspace-2'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 3"
      (label :text "ﮂ"
        :class {matches(workspace,3) ? 'workspace-3 active' : 'workspace-3'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 4"
      (label :text ""
        :class {matches(workspace,4) ? 'workspace-4 active' : 'workspace-4'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 5"
      (label :text "輸"
        :class {matches(workspace,5) ? 'workspace-5 active' : 'workspace-5'}
      )
    )
  )
)

; }}}
; =============================================================================

; ================================= network ===================================
; {{{

(defwidget network []
  (box :class "network" :halign "end" :spacing 16 :space-evenly false
    (label :text "ﯲ ${EWW_NET.enp10s0.NET_DOWN}")
    (label :text "ﯴ ${EWW_NET.enp10s0.NET_UP}")
  )
)
;}}}
; =============================================================================
