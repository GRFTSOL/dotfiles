; ┌┬┐┌─┐┬┌┐┌
; │││├─┤││││
; ┴ ┴┴ ┴┴┘└┘
; -- windows ==================================================================
; top-bar bot-bar {{{

(defwindow top-bar
  :monitor 0
  :geometry (geometry
    :width "100%"
    :anchor "top center"
  )
  :stacking "fg"
  :exclusive false
  :focusable false
  (centerbox :class "top-bar-box"
    (top-left) (top-center-fake) (top-right)
  )
)

(defwindow top-center
  :monitor 0
  :geometry (geometry
    :width "42%"
    :anchor "top center"
  )
  :stacking "fg"
  :exclusive false
  :focusable false
  (top-center-real)
)


(defwindow bot-bar
  :monitor 0
  :geometry (geometry
    :width "100%"
    :anchor "bottom center"
  )
  :stacking "fg"
  :exclusive false
  :focusable false
  (centerbox :class "bot-bar-box"
    (bot-left) (bot-center) (bot-right)
  )
)

; }}}
; ================================================================== windows ==

; == general widgets ==========================================================
; mybox {{{

(defwidget mybox [box-class ?spacing]
  (box
    :class "${box-class}-box"
    :spacing {strlength("${spacing}") > 0 ? '${spacing}' : '16'}
    :orientation "h"
    :space-evenly false
    (children)
  )
)
; }}}
; ========================================================== general widgets ==

; ┌┬┐┌─┐┌─┐
;  │ │ │├─┘
;  ┴ └─┘┴
; == top-left =================================================================
; music audio {{{

(defwidget top-left []
  (mybox :box-class "top-left"
    (box :class "music-cover" :style "background-image: url('${artUrl}');")
    (music)
    (mybox :box-class "audio" (audio-in) (audio-out))
    )
  )

; == music ===================================================================
; artUrl status progress song artist volume {{{

(defpoll artUrl
  :initial "/home/cullyn/.config/eww/assets/ytm.png"
  :interval "1s"
  "scripts/music_info cover"
)
(deflisten status :initial "ﭦ" `playerctl --follow status`)
(defpoll progress :initial 1 :interval "0.5s" "scripts/music_info duration")
(defpoll song :interval "1s"  "scripts/music_info song")
(defpoll artist :interval "1s"  "scripts/music_info artist")
(defwidget music-progress-indicator []
  (mybox :box-class "music-progress"
    (circular-progress
      :class "music-progress"
      :value progress
      :start-at 75
      :thickness 2
      :clockwise true
      (box :class "music-progress-icon"
        (eventbox
          :onclick "playerctl --player=youtube-music-desktop-app play-pause"
          "${matches(status, "Playing") ? "" : "奈"}"
          )
        )
      )
    )
  )
(defpoll volume :interval "1s"  "scripts/music_info volume")
(defwidget music []
  (mybox :box-class "music"
    (music-progress-indicator)
    (mybox :box-class "music-info"
      (label :class "music-song"   :markup song)
      (label :class "music-artist" :markup artist)
      (label :class "music-volume" :markup volume )
      )
    )
  )
; }}}
; =================================================================== music ==

; == audio ===================================================================
; audio-in (source) audio-out (sink) {{{
(deflisten source_volume :initial '100' 'tail -F /tmp/.source_volume')
(defwidget audio-in []
  (eventbox :class "audio-in-eventbox"
            :onclick "alacritty --title='terminalfloat' -e pulsemixer & disown"
            :onscroll "scripts/pulse_info change_volume source {} 10"
    (label :text " ${source_volume}")
    )
  )

(deflisten sink_volume :initial '50' 'tail -F /tmp/.sink_volume')
(defwidget audio-out []
  (eventbox :class "audio-out-eventbox"
            :onclick "alacritty --title='terminalfloat' -e pulsemixer & disown"
            :onscroll "scripts/pulse_info change_volume sink {} 10"
    (label :text "墳 ${sink_volume}")
    )
  )
; }}}
; =================================================================== audio-io ==

; }}}
; ================================================================= top-left ==

; == top-center ===============================================================
; weather time weekday {{-{

(defwidget top-center-fake [] "")

(defwidget top-center-real []
  (box :class "top-bar-box"
    (weather) (time) (weekday)
  )
)

; == weather ==================================================================

; {{{
(defpoll w-icon :interval "5m" 'jq -r ".current.weather[].icon" /tmp/.weather_info.json')
(defpoll w-temp :interval "5m" 'jq -r ".current.feels_like" /tmp/.weather_info.json')
(defpoll w-main :interval "5m" 'jq -r ".current.weather[].main" /tmp/.weather_info.json')
(defpoll w-cond :interval "5m" 'jq -r ".current.weather[].description" /tmp/.weather_info.json')
(defwidget weather []
  (box :class "weather-box" :halign "end" :space-evenly false :spacing 8
       :style "margin-right: ${timer-visible ? '-90px' : '-140px;'}"
    (box
      :class "weather-icons"
      :style "background-image: url('assets/owm-icons/${w-icon}.png');"
    )
    (label :markup "${round(w-temp,0)}<sup>°</sup>" )
    (label :markup {matches(w-main, "Clear") ?
      "<b>${w-main}</b>" :
      "<b>${w-main}</b> (<i><small>${w-cond}</small></i>)"}
    )
  )
)
; }}}
; ================================================================== weather ==

; == time =====================================================================
; {{{

(defvar hour-active false)
(defvar minute-active false)
(defwidget time-active [content var bool]
    (eventbox
      :class {bool ?
        "time-${content}-active" : "time-${content}"
      }
      :onhover "eww update ${content}-active=true"
      :onhoverlost "eww update ${content}-active=false"
      var
    )
)

(defpoll clockface-hour :interval "1s" 'scripts/date_info clockface-hour')
(defpoll clockface-minute :interval "1s" 'scripts/date_info clockface-minute')
(defwidget clockface-delimiter []
  (box :class "time-clockface-box" :orientation "v" :spacing -4 :space-evenly false
    (time-active :content "hour" :var clockface-hour :bool hour-active)
    (time-active :content "minute" :var clockface-minute :bool minute-active)
  )
)

(defpoll hour :interval "1s" "date '+%H'")
(defpoll minute :interval "1s" "date '+%M'")
(defwidget time []
  (box :class "time-box" :halign "center" :space-evenly false :spacing 0
    (timer-left)
    (time-active :content "hour" :var hour :bool hour-active)
    (clockface-delimiter)
    (time-active :content "minute" :var minute :bool minute-active)
    (timer-right)
  )
)


(defvar timer-visible false)
(deflisten timer :initial "00:00" 'tail -F /tmp/.timer')
(defwidget timer-left []
  (eventbox :class "time-timer"
    :onhover "eww update timer-visible=true"
    :onhoverlost "eww update timer-visible=false"
    (box :space-evenly false :spacing 8
      (revealer
        :class "time-timer-info"
        :reveal timer-visible
        :transition "slideright"
        (eventbox
          (label :text timer)
        )
      )
      (label :class "time-timer-label-left" :text "羽")
    )
  )
)

(deflisten alarm :initial "00:00" 'tail -F /tmp/.alarm')
(defwidget timer-right []
  (eventbox :class "time-timer"
    :onhover "eww update timer-visible=true"
    :onhoverlost "eww update timer-visible=false"
    (box :space-evenly false :spacing 8
      (label :class "time-timer-label-right" :text "")
      (revealer
        :class "time-timer-info"
        :reveal timer-visible
        :transition "slideleft"
        (eventbox(label :text alarm))
      )
    )
  )
)
; }}}
; ===================================================================== time ==

; == weekday ==================================================================
; {{{

(deflisten week 'tail -F /tmp/.week')
(deflisten day 'tail -F /tmp/.day')
(defwidget weekday []
  (box :class "weekday-box"
       :halign "start" :space-evenly false :spacing 16
       :style "margin-left: ${timer-visible ? '-90px' : '-140px;'}"
    (mybox :box-class "weekday-day" :spacing 6
      (label :text "")
      day
    )
    (mybox :box-class "weekday-week" :spacing 4
      (label :text "冀")
      week
    )
  )
)
; }}}
; ================================================================== weekday ==
;}}}
; =============================================================== top-center ==

; == top-right ================================================================
; cp temp memeory gpu {{{

(defvar userUrl '/home/cullyn/.config/eww/assets/nosvagor.png')
(defwidget top-right []
  (box
    :class "top-right-box"
    :halign "end"
    :spacing 16
    :space-evenly false
    (cpu)
    (temp)
    (memory)
    (gpu)
    (box :class "user" :style "background-image: url('${userUrl}');")
  )
)

; == cpu ======================================================================
; {{{

(defwidget cpu []
  (mybox :box-class "cpu"
  "cpu"
  )
)
; }}}
; ====================================================================== cpu ==

; == temp =====================================================================
; {{{

(defwidget temp []
  (mybox :box-class "temp"
  "temp"
  )
)
; }}}
; ===================================================================== temp ==

; == memory ===================================================================
; {{{

(defwidget memory []
  (mybox :box-class "memory"
  "memory"
  )
)
; }}}
; =================================================================== memory ==

; == gpu ======================================================================
; {{{

(defwidget gpu []
  (mybox :box-class "gpu"
  "gpu"
  )
)
; }}}
; ====================================================================== gpu ==

; }}}
; ================================================================ top-right ==

; ┌┐ ┌─┐┌┬┐
; ├┴┐│ │ │
; └─┘└─┘ ┴
; == bot-left =================================================================
; pacman {{{

(defwidget bot-left []
  (mybox :box-class "bot-left"
    (pacman)
  )
)

(defwidget pacman [] "pacman")

; }}}
; ================================================================= bot-left ==

; == bot-center ===============================================================
; workspaces {{{

(defwidget bot-center []
  (mybox :box-class "bot-center"
    (workspaces)
  )
)

(deflisten active_workspace 'tail -F /tmp/.active_workspace')
(defwidget workspaces []
  (mybox :box-class "workspace" :spacing 12
    (eventbox
      :onclick "hyprctl dispatch workspace 1"
      (label :text ""
        :class {matches(active_workspace,1) ? 'workspace-1 active' : 'workspace-1'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 2"
      (label :text ""
        :class {matches(active_workspace,2) ? 'workspace-2 active' : 'workspace-2'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 3"
      (label :text "ﮂ"
        :class {matches(active_workspace,3) ? 'workspace-3 active' : 'workspace-3'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 4"
      (label :text ""
        :class {matches(active_workspace,4) ? 'workspace-4 active' : 'workspace-4'}
      )
    )
    (eventbox
      :onclick "hyprctl dispatch workspace 5"
      (label :text "輸"
        :class {matches(active_workspace,5) ? 'workspace-5 active' : 'workspace-5'}
      )
    )
  )
)

; }}}
; =============================================================== bot-center ==

; == bot-right ================================================================
; netowork {{{

(defwidget bot-right []
  (box
    :class "bot-right"
    :halign "end"
    :spacing 16
    :space-evenly false
    (network)
  )
)

(defwidget network [] "network")

; }}}
; ================================================================ bot-right ==
