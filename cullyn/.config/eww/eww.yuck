; ================================= core ======================================
; üöß constants {{{

(defvar spacing 16)

; }}}
; ü™ü windows {{{

(defwindow sound
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "30%" :anchor "top left")
  (box :class "sound" :halign "start" :space-evenly false :spacing spacing
    (music) (audio)
    )
  )

(defwindow today
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "36%" :anchor "top left" :x "1226px")
  (centerbox :class "today"
    (weather) (time) (date)
    )
  )

(defwindow computer
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "30%" :anchor "top right")
  (box :class "computer" :halign "end" :space-evenly false :spacing spacing
    (cpu) (memory) (gpu) (user)
    )
  )

(defwindow actions
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "33%" :anchor "bottom left")
  (actions)
  )

(defwindow workspaces
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "8%" :anchor "bottom center")
  (workspaces)
  )

(defwindow network
  :monitor 0 :stacking "fg" :exclusive false :focusable false
  :geometry (geometry :width "33%" :anchor "bottom right")
  (network)
  )

; }}}
; ‚ôªÔ∏è  widgets {{{

(defwidget slide-n-fade [direction bool]
  (revealer
    :transition "${direction == "left" ? "slideleft" : "slideright" }"
    :reveal bool
    (revealer
      :transition "crossfade"
      :reveal bool
      (children)
    )
  )
)

; }}}
; =============================================================================

; ================================= sound =====================================
; {{{

(defvar player "youtube-music-desktop-app")
(deflisten pctl 'tail -F /tmp/eww/music.json 2> /dev/null')
(defvar artUrl "/tmp/eww/album_art.png")
(defpoll progress :interval "1s" "scripts/music_info progress")

(defwidget music []
  (box :class "music" :space-evenly false :spacing spacing
    (music-cover) (music-info)
  )
)

(defwidget music-cover []
  (box
    :class "music-cover"
    :style "background-image: url('${ matches("${pctl.status}", "Playing") ?
      artUrl :
      "/home/cullyn/.config/eww/assets/ytm.svg" }');"
    )

)

(defwidget music-progress []
  (box :class "music-progress" :space-evenly false :spacing spacing
    (circular-progress
      :class "music-progress-circle"
      :value progress
      :start-at 75
      :thickness 2
      :clockwise true
      (box
        :class "music-progress-circle-icon"
        (eventbox
          :class "music-${matches("${pctl.status}", "Playing") ? "playing" : "paused" }"
          :onclick "playerctl --player=${player} play-pause"
          (label :text "${matches("${pctl.status}", "Playing") ? "Ô£• " : "Ô§å "}")
        )
      )
    )
  )
)

(defwidget music-info []
  (box :class "music-info" :space-evenly false :spacing spacing
    (music-progress)
    (label :class "music-title"  :markup "<tt>Ô¢Ö</tt>  ${pctl.title}")
    (label :class "music-album"  :markup "<tt>Ôî§</tt>  ${pctl.album}")
    (label :class "music-artist" :markup "<tt>Ôîà</tt>  ${pctl.artist}")
    (label :class "music-volume" :markup "<tt>Ô©Ω</tt> ${round(pctl.volume * 100,0)}")
  )
)
; }}}
; {{{

(deflisten source :initial '100' 'tail -F /tmp/eww/source')
(deflisten sink :intial '50' 'tail -F /tmp/eww/sink')

(defwidget audio []
  (box :class "audio" :space-evenly false :spacing spacing
    (audio-control :content "source" :var source :icon "ÔÑ∞")
    (audio-control :content "sink" :var sink :icon "Ô©Ω")
  )
)

(defwidget audio-control [content icon var]
  (eventbox
    :class "audio-${content}"
    :onclick "alacritty --title='terminalfloat' -e pulsemixer & disown"
    :onscroll "scripts/pulse_info change_volume ${content} {} 1"
    (label :class "audio-${content}-label" :text "${icon} ${var}")
  )
)
; }}}
; =============================================================================

; ================================= today =====================================
; üåßÔ∏è weather {{{

; TODO CHANGE ALL THIS INTO SINGLE LISTENING JSON
(deflisten w-id :initial "800" 'tail -F "/tmp/eww/weather/id"')
(deflisten w-icon 'tail -F "/tmp/eww/weather/icon"')
(deflisten w-temp 'tail -F "/tmp/eww/weather/temp"')
(deflisten w-main 'tail -F "/tmp/eww/weather/main"')
(deflisten w-cond 'tail -F "/tmp/eww/weather/cond"')
; TODO: dynamic AQI
(deflisten w-aqi  'tail -F "/tmp/eww/weather/aqi"')
(deflisten w-uvi  'tail -F "/tmp/eww/weather/uvi"')
(deflisten w-rain 'tail -F "/tmp/eww/weather/rain"')
(deflisten w-wind 'tail -F "/tmp/eww/weather/wind"')
(deflisten w-bf-i 'tail -F "/tmp/eww/weather/bf-icon"')
(deflisten w-bf-d 'tail -F "/tmp/eww/weather/bf-desc"')
(defvar weather-info false)

(defwidget weather []
  (eventbox
    :onhover "eww update weather-info=true"
    :onhoverlost "eww update weather-info=false"
    (box
      :class "weather" :halign "end" :space-evenly false :spacing 8
      (box
        :class "weather-icons"
        :style "background-image: url('assets/owm-icons/${w-icon}.png');"
      )
      (label :markup "<b>${w-temp}<tt><sup>Óåπ</sup></tt></b>")
      (label
        :class "weather-label"
        :markup "<b>${w-main}</b>  <tt>Óàπ</tt>  ${w-rain}<small>%</small>"
      )
      (slide-n-fade :bool weather-info :direction "right"
        (label
          :class "weather-label-open"
          :markup "<tt>Óçù</tt>  ${w-aqi} ${w-uvi > 0 ? "<tt>Ôßü</tt>  ${w-uvi}<small> </small>" : "<small> </small>"}<tt>${w-bf-i}</tt>  ${w-wind}<sub>m/s</sub>"
        )
      )
    )
  )
)
; }}}
; üïê time {{{

(defpoll time :interval "1s"
  `date +'{"hour":"%H", "minute":"%M", "second":"%S"}'`
)
(deflisten clockface-hour 'tail -F /tmp/eww/clockface-hour')
(deflisten clockface-minute 'tail -F /tmp/eww/clockface-minute')
(defvar hour-active false)
(defvar minute-active false)
(defvar fine-adjust false)
(defvar timer-visible false)
(deflisten alarm-current 'tail -F /tmp/eww/alarm')
(deflisten timer-current 'tail -F /tmp/eww/timer')

(defwidget time []
  (eventbox
    :onhover "eww update timer-visible=true"
    :onhoverlost "eww update timer-visible=false"
    :onmiddleclick "eww update fine-adjust=${fine-adjust ? "false" : "true"}"
    (box
      :class "time"
      :halign "center"
      :space-evenly false
      :spacing 2
      :style "padding: 0 ${timer-visible ? "0.9" : "1.2" }em;"
      (alarm)
      (clock :child "hour" :text {time.hour} :bool hour-active)
      (clockface)
      (clock :child "minute" :text {time.minute} :bool minute-active)
      (timer)
    )
  )
)

(defwidget clock [child bool text]
  (eventbox
    :class "time-${child} time-${child}-${bool ? "active" : "inactive"}"
    :onhover "eww update ${child}-active=true"
    :onhoverlost "eww update ${child}-active=false"
    :onclick "firefox-developer-edition https://calendar.google.com/calendar/u/0/r"
    :onrightclick "firefox-developer-edition https://calendar.google.com/calendar/u/0/r/eventedit?state=%5B%5D"
    (label :class "time-text" :text text)
  )
)

(defwidget clockface []
  (box
    :class "time-clockface"
    :orientation "v"
    :valign "center"
    :spacing -4
    :space-evenly false
    (clock :child "hour" :text "${clockface-hour} " :bool hour-active)
    (clock :child "minute" :text "${clockface-minute} " :bool minute-active)
  )
)

(defwidget time-revealer [app direction child bool icon text subtext]
  (slide-n-fade
    :bool timer-visible
    :direction {direction == "left" ? "right" : "left"}
    (eventbox
      :class "time-${app} time-${child}-${bool ? "active" : "inactive" }"
      :onhover "eww update ${child}-active=true"
      :onhoverlost "eww update ${child}-active=false"
      :onclick "scripts/timer_info ${app}_status & disown"
      :onscroll "scripts/timer_info ${app} {} ${fine-adjust ? 1 : 15}"
      :onrightclick "scripts/timer_info reset ${app}"
      (box :class "time-${app}" :space-evenly false :spacing 6
        {direction == "left" ? text : ""}
        (box
          :orientation "v"
          :valign "center"
          :space-evenly false
          :spacing 1
          (label :class "time-${app}-icon" :text icon)
          (label :class "time-${app}-subtext" :text subtext)
        )
        {direction == "right" ? text : "" }
      )
    )
  )
)

(defwidget alarm []
  (time-revealer
    :app "alarm"
    :direction "left"
    :child "hour"
    :bool hour-active
    :text alarm-current
    :icon "Ôî†"
    :subtext {fine-adjust ? "Ô§ö" : "Ôôë"}
  )
)

(defwidget timer []
  (time-revealer
    :app "timer"
    :direction "right"
    :child "minute"
    :bool minute-active
    :text timer-current
    :icon "Ô®û"
    :subtext {time.second}
  )
)
; }}}
; üìÖ date {{{

(deflisten weeks_alive 'tail -F /tmp/eww/weeks_alive')
(deflisten date_abd 'tail -F /tmp/eww/date_abd')
(defvar date-extra false)

(defwidget date []
  (eventbox
    :onhover "eww update date-extra=true"
    :onhoverlost "eww update date-extra=false"
    (box
      :class "date"
      :halign "start"
      :space-evenly false
      :spacing 10
      (slide-n-fade
        :bool date-extra
        :direction "left"
        (label :class "date-week" :text "Ô©µ  ${weeks_alive}")
      )
      (box
        :class "date-general"
        :space-evenly false
        :spacing 6
        (label
          :class "date-weekday"
          :style "margin-left: ${date-extra ? "0" : "-6"}px;"
          :text "Ôó¨  ${date_abd.weekday},"
        )
        (label :class "date-month" :text "${date_abd.month}")
        (label :class "date-month" :text "${date_abd.day}")
      )
    )
  )
)

; }}}
; =============================================================================

; ================================= computer ==================================
; ‚ôªÔ∏è  computer-widgets {{{
(defwidget num-to-block [load]
  (label
    :text {
      load < 12.5  ? "‚ñÅ" :
      load < 25    ? "‚ñÇ" :
      load < 37.5  ? "‚ñÉ" :
      load < 50    ? "‚ñÑ" :
      load < 62.5  ? "‚ñÖ" :
      load < 75    ? "‚ñÜ" :
      load < 88.5  ? "‚ñá" : "‚ñà"
    }
    :class "ramp-${
      load < 5   ? "1" :
      load < 10  ? "2" :
      load < 20  ? "3" :
      load < 30  ? "4" :
      load < 40  ? "5" :
      load < 50  ? "6" :
      load < 60  ? "7" :
      load < 70  ? "8" :
      load < 80  ? "9" :
      load < 90  ? "10" :
      load < 95  ? "11" : "12"
    }"
  )
)

(defwidget label-ramp [child icon ?val percent bool ?direction]
  (box
    :space-evenly false
    :spacing 5
    :class "${child} ramp-${
      percent < 25  ? "4"  :
      percent < 35  ? "5"  :
      percent < 50  ? "6"  :
      percent < 65  ? "7"  :
      percent < 80  ? "8"  :
      percent < 85  ? "9"  :
      percent < 90  ? "10" :
      percent < 95  ? "11" : "12"
    }"
    (label :markup icon :class "${child}-icon")
    (slide-n-fade :bool bool :direction "right"
      (label
        :class "${child}-text"
        :markup {strlength(val) > 0 ? val : "${round(percent,0)}<small>%</small>"}
      )
    )
  )
)

(defwidget temp-ramp [child current percent max bool ?direction ?extra]
  (box
    :space-evenly false
    :spacing 6
    :class "${child} ramp-${
      percent < 50  ? "3"  :
      percent < 56  ? "4"  :
      percent < 62  ? "5"  :
      percent < 68  ? "6"  :
      percent < 74  ? "8"  :
      percent < 80  ? "9" :
      percent < 86  ? "10" :
      percent < 94  ? "11" : "12"
    } ${current >= max ? "ramp-crit" : ""}"
    (label
      :class "${child}-icon"
      :text "${
        percent < 50 ? "Ôãã" :
        percent < 56 ? "Ôãä" :
        percent < 80 ? "Ôãâ" :
        percent < 90 ? "Ôãà" : "Ôãá"
      }"
    )
    (slide-n-fade :bool bool :direction {strlenth(direction) > 0 ? "${direction}" : "right"}
      (label
        :class "${child}-current"
        :markup "${current}<sup>Óåπ</sup>${extra}"
      )
    )
  )
)
; }}}

; üíª cpu {{{
(defvar cpu-info false)
(defvar cores "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]")

(defwidget cpu []
  (eventbox
    :onhover "eww update cpu-info=true"
    :onhoverlost "eww update cpu-info=false"
    :onclick "alacritty --title='terminalfloat' -e btop & disown"
    (box :class "cpu" :space-evenly false :spacing 8
      (temp-ramp
        :child "cpu-temp"
        :current {round(sensors.nvme-pci-0100.Composite.temp1_input,0)}
        :percent {round(
          sensors.nvme-pci-0100.Composite.temp1_input /
          (sensors.nvme-pci-0100.Composite.temp1_min -
          sensors.nvme-pci-0100.Composite.temp1_max * - 1) * 100
        ,0)}
        :max {sensors.nvme-pci-0100.Composite.temp1_max}
        :bool cpu-info
      )
      (label-ramp
        :icon "Ô°ö"
        :child "cpu-busy"
        :percent {EWW_CPU.avg}
        :bool cpu-info
      )
      (box :class "cpu-bars" :space-evenly false :spacing 2
        (for num in cores
          (num-to-block :load {EWW_CPU.cores[num].usage})
        )
      )
    )
  )
)

; }}}
; üß† memory {{{

(defvar range16 "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]")
(defvar memory-info false)

(defwidget memory []
  (eventbox
    :onhover "eww update memory-info=true"
    :onhoverlost "eww update memory-info=false"
    :onclick "alacritty --title='terminalfloat' -e btop & disown"
    (box :class "memory" :space-evenly false :spacing 2
      (label-ramp
        :icon "ÔÆï"
        :child "memory-busy"
        :percent {EWW_RAM.used_mem_perc}
        :bool memory-info
      )
      (box :class "memory-bars" :space-evenly false :spacing -2
        (for n in range16
          (label
            :text "Ôõú"
            :class "ramp-${
              EWW_RAM.used_mem_perc == 100 ? "12" : "${
                EWW_RAM.used_mem_perc < n * 95 / 15 ? "2" : "${
                  round(n / 2.1, 0) + 4
                }"
              }"
            }"
          )
        )
      )
    )
  )
)

; }}}
; üñ•Ô∏è gpu {{{

(defpoll sensors :interval "0.5s" `sensors -j`)
(defpoll gpu :interval "0.5s" 'scripts/computer_info')
(defvar range8 "[0,1,2,3,4,5,6,7]")
(defvar gpu-info false)

(defwidget gpu []
 (eventbox
    :onhover "eww update gpu-info=true"
    :onhoverlost "eww update gpu-info=false"
    :onclick "alacritty --title='terminalfloat' -e nvtop & disown"
    (box :class "gpu" :space-evenly false :spacing 8
      (gpu-temp)
      (label-ramp
        :icon "‚å¨"
        :child "gpu-busy"
        :percent {gpu.gpu_busy}
        :bool gpu-info
      )
      (mclock)
      (label-ramp
        :icon "ÔÉß"
        :child "gpu-voltage"
        :percent {round(
            sensors.amdgpu-pci-0d00.PPT.power1_average /
            sensors.amdgpu-pci-0d00.PPT.power1_cap * 100
        ,0)}
        :val "${round(sensors.amdgpu-pci-0d00.PPT.power1_average,0)}<sub><b>W</b></sub>"
        :bool gpu-info
      )
      (label-ramp
        :icon "Ôúè"
        :child "gpu-fan"
        :percent {round(
            sensors.amdgpu-pci-0d00.fan1.fan1_input /
            sensors.amdgpu-pci-0d00.fan1.fan1_max * 100
        ,0)}
        :val "${round(sensors.amdgpu-pci-0d00.fan1.fan1_input,0)}<sub><b>RPM</b></sub>"
        :bool gpu-info
      )
      (vram)
    )
  )
)

(defwidget gpu-temp []
  (temp-ramp
    :child "gpu-temp"
    :current {round(sensors.amdgpu-pci-0d00.junction.temp2_input,0)}
    :percent {round(
      sensors.amdgpu-pci-0d00.junction.temp2_input /
      sensors.amdgpu-pci-0d00.junction.temp2_crit  * 100
    ,0)}
    :max {sensors.amdgpu-pci-0d00.junction.temp2_crit}
    :bool gpu-info
    ; :extra "|${round(sensors.amdgpu-pci-0d00.edge.temp1_input,0)}<sup>Óåπ</sup>|${round(sensors.amdgpu-pci-0d00.mem.temp3_input,0)}<sup>Óåπ</sup>"
  )
)

(defwidget mclock []
  (box :class "gpu-mclock" :space-evenly false :spacing 3
    (label
      :text "ÔßÑ"
      :class "gpu-mclock-icon ramp-${
        gpu.mclk_level == 1 ? "5" :
        gpu.mclk_level == 2 ? "9" :
        gpu.mclk_level == 3 ? "12" : "4"
      }"
    )
    (slide-n-fade :bool gpu-info :direction "right"
      (label
        :markup "${gpu.mclk}<b><sub>MHz</sub></b>"
        :class "gpu-mclock-text ramp-${
          gpu.mclk_level == 1 ? "5" :
          gpu.mclk_level == 2 ? "9" :
          gpu.mclk_level == 3 ? "12" : "4"
        }"
      )
    )
  )
)

(defwidget vram []
  (box :class "gpu-vram" :space-evenly false :spacing 5
    (label-ramp
      :child "gpu-vram"
      :icon "ÔÆï"
      :percent {gpu.mem_busy}
      :bool gpu-info
    )
    (box :class "gpu-vram-bars" :space-evenly false :spacing -2
      (for n in range8
        (label
          :text "Ôõú"
          :class " ramp-${
            gpu.vram == 100 ? "12" : "${gpu.vram < n * 95 / 7 ? "2" : n + 4}"
          }"
        )
      )
    )
  )
)

; }}}
; Ôêï  user {{{

(defvar userUrl '/home/cullyn/.config/eww/assets/nosvagor.png')
(defwidget user []
  (box :class "user" :style "background-image: url('${userUrl}');")
)
; }}}
; =============================================================================

; ================================= actions ===================================
; pacman {{{

(defwidget actions []
    (box :class "actions" :space-evenly false :spacing spacing
    (apps) (pacman) (screen) (colorpicker)
  )
)

(defwidget apps [] "apps")
(defwidget pacman [] "pacman")
(defwidget screen [] "screen")
(defwidget colorpicker [] "colorpicker")

; }}}
; =============================================================================

; ================================= workspaces ================================
; {{{

(deflisten active-ws 'tail -F /tmp/eww/workspace')
(defvar ws-hovered false)

(defwidget workspace [icon num]
  (eventbox
    :onclick "hyprctl dispatch workspace ${num}"
    :onhover "eww update ws-hovered=true"
    :onhoverlost "eww update ws-hovered=false"
    (box
      :style "background-image: url('assets/ws-icons/${icon}${matches(active-ws,num) ? '-active' : ''}.svg');"
      :class "workspace ws-${num}"
    )
  )
)

(defwidget workspaces []
  (box :class "workspaces-box" :halign "center" :space-evenly false :spacing spacing
    (workspace :icon "network"  :num "1")
    (workspace :icon "learn"    :num "2")
    (workspace :icon "dna"      :num "3")
    (workspace :icon "dotfiles" :num "4")
    (workspace :icon "music"    :num "5")
  )
)

; }}}
; =============================================================================

; ================================= network ===================================
; {{{

(defwidget network []
  (box :class "network" :halign "end" :space-evenly false :spacing spacing
    (label :text "ÔØ≤ ${EWW_NET.enp10s0.NET_DOWN}")
    (label :text "ÔØ¥ ${EWW_NET.enp10s0.NET_UP}")
    (label :text "notifications Ôíö ")
  )
)
;}}}
; =============================================================================
