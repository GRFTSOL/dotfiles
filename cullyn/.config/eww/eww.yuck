; ████████╗ ██████╗ ██████╗
; ╚══██╔══╝██╔═══██╗██╔══██╗
;    ██║   ██║   ██║██████╔╝
;    ██║   ██║   ██║██╔═══╝
;    ██║   ╚██████╔╝██║
;    ╚═╝    ╚═════╝ ╚═╝
(defwindow top-bar
  :monitor 0
  :geometry (geometry
    :y "6px"
    :width "100%"
    :height "36px"
    :anchor "top center"
  )
  :stacking "fg"
  :exclusive true
  :focusable false
  (centerbox
    (top-left)
    (top-center)
    (top-right)
  )
)


; ┌┬┐┌─┐┌─┐   ┬  ┌─┐┌─┐┌┬┐
;  │ │ │├─┘───│  ├┤ ├┤  │
;  ┴ └─┘┴     ┴─┘└─┘└   ┴
(defwidget top-left []
  (box
    :class "top-left"
    :halign "start"
    :spacing 36
    :space-evenly false
    date
    time
    weather
  )
)

(defpoll date :interval "1s" "date '+ %A, %B %d, %Y'")
(defpoll time :interval "1s" "date '+ %H:%M'")
(defpoll weather :interval "1m"  "python ~/.config/eww/scripts/weather.py")



; ┌┬┐┌─┐┌─┐   ┌─┐┌─┐┌┐┌┌┬┐┌─┐┬─┐
;  │ │ │├─┘───│  ├┤ │││ │ ├┤ ├┬┘
;  ┴ └─┘┴     └─┘└─┘┘└┘ ┴ └─┘┴└─
(defwidget top-center []
  (box
    :class "top-center"
    :halign "center"
    :spacing 16
    :space-evenly false
    (mic)
    (music)
    (speaker)
  )
)

(defpoll status :interval "0.2s"  "~/.config/eww/scripts/music_info status")
(defpoll cover :interval "1s"  "~/.config/eww/scripts/music_info cover")
(defpoll song :interval "1s"  "~/.config/eww/scripts/music_info song")
(defpoll artist :interval "1s"  "~/.config/eww/scripts/music_info artist")
(defpoll duration :interval "1s"  "~/.config/eww/scripts/music_info duration")
(defpoll volume :interval "1s"  "~/.config/eww/scripts/music_info volume")

(defwidget mic [] "mic")

(defwidget music []
  (box
    :class "music-box"
    :haligh "center"
    :spacing 16
    :space-evenly false
    (label :class "music-status" :text status)
    (image :class "music-cover" :path cover :image-width 32)
    song
    (label :markup artist)
    duration
    (label :markup volume )
  )
)

(defwidget speaker [] "speaker")



; ┌┬┐┌─┐┌─┐   ┬─┐┬┌─┐┬ ┬┌┬┐
;  │ │ │├─┘───├┬┘││ ┬├─┤ │
;  ┴ └─┘┴     ┴└─┴└─┘┴ ┴ ┴
(defwidget top-right []
  (box
    :class "top-right"
    :orientation "h"
    :halign "end"
    :spacing 16
    :space-evenly false
    (cpu)
    (memory)
    (gpu)
    (temp)
  )
)

(defwidget cpu [] "cpu")
(defwidget memory [] "memory")
(defwidget gpu [] "gpu")
(defwidget temp [] "temp")


; ██████╗  ██████╗ ████████╗
; ██╔══██╗██╔═══██╗╚══██╔══╝
; ██████╔╝██║   ██║   ██║
; ██╔══██╗██║   ██║   ██║
; ██████╔╝╚██████╔╝   ██║
; ╚═════╝  ╚═════╝    ╚═╝
(defwindow bot-bar
  :monitor 0
  :geometry (geometry
    :y "6px"
    :width "100%"
    :height "36px"
    :anchor "bottom center"
  )
  :stacking "fg"
  :exclusive true
  :focusable false
  (box
    :class "bot-bar-box"
    :orientation "h"
    :haligh "center"
    :space-evenly true
    (bot-left)
    (workspaces)
    (bot-right)
  )
)



; ┌┐ ┌─┐┌┬┐  ┬  ┌─┐┌─┐┌┬┐
; ├┴┐│ │ │───│  ├┤ ├┤  │
; └─┘└─┘ ┴   ┴─┘└─┘└   ┴
(defwidget bot-left []
  (box
    :class "bot-left"
    :halign "start"
    :spacing 36
    :space-evenly false
    (pacman)
  )
)

(defwidget pacman [] "pacman")



; ┌┐ ┌─┐┌┬┐  ┌─┐┌─┐┌┐┌┌┬┐┌─┐┬─┐
; ├┴┐│ │ │───│  ├┤ │││ │ ├┤ ├┬┘
; └─┘└─┘ ┴   └─┘└─┘┘└┘ ┴ └─┘┴└─
(defwidget workspaces []
  (box
    :class "workspaces"
    :halign "center"
    :space-evenly false
  (label :text workspace)
  )
)

(deflisten workspace :initial "-4-"
  'tail -f /tmp/.active_workspace'
)

; ┌┐ ┌─┐┌┬┐  ┬─┐┬┌─┐┬ ┬┌┬┐
; ├┴┐│ │ │───├┬┘││ ┬├─┤ │
; └─┘└─┘ ┴   ┴└─┴└─┘┴ ┴ ┴
(defwidget bot-right []
  (box
    :class "bot-right"
    :orientation "h"
    :halign "end"
    :spacing 16
    :space-evenly false
    (network)
  )
)

(defwidget network [] "network")
