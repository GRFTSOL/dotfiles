global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

# ╔╗ ┌─┐┌─┐┬┌─┐┌─┐
# ╠╩╗├─┤└─┐││  └─┐
# ╚═╝┴ ┴└─┘┴└─┘└─┘
snippet template "Basic template" bA
\documentclass[basic, header]{nosvagor-notes}
\usepackage{nosvagor-math}

\colorlet{title-color}{${1:red}}
\newcommand{\theTitle}{%
	\href{https://github.com/nosvagor/notes}%
	{${2:Title}}%
}

\newcommand{\userName}{${3:Cullyn Newman}}
\newcommand{\class}{${4:Class}}
\newcommand{\institution}{${5:Portland State}}

\begin{document}

$0

\end{document}
endsnippet

snippet newpage "newpage" bA

%%%%%%%%%%%%%
	\newpage %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%
		$0
endsnippet


snippet alph "enumerate alph" i
[label=(\alph*)]
endsnippet

snippet indent "enumerate indent" i
[leftmargin=2em]
endsnippet

snippet itemsep "enumerate indent" i
[itemsep=4em]
endsnippet


snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet center "center" bA
\begin{center}
	$0
\end{center}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet sec "section" bA
\section{$1}
\begin{itemize}
	\item[]

\end{itemize}
endsnippet

snippet ssec "subsection" bA
\subsection{$1}
\begin{itemize}
	\item

\end{itemize}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\begin{tabular}{${3:ccc}}
		\toprule
		$4 & $5 & $6 \\\\
		\midrule
       &    &    \\\\
       &    &    \\\\
       &    &    \\\\
		\bottomrule
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}

	\item $0

\end{enumerate}
endsnippet

snippet problems "enumerate selected problems" bA
\subsection{Problems $1, $2, $3}
\begin{enumerate}
	\minor{\item[$1.] $0
	}

	\minor{\item[$2.]
	}

	\minor{\item[$3.]
	}

\end{enumerate}
endsnippet

snippet setcount "counter" iA
\setcounter{enumi}{$1}
endsnippet

snippet mnr "color minor" iA
\minor{$1} $0
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0

\end{itemize}
endsnippet

snippet -- "\item" bA
\\item $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet vsp "vsapce" bA
\vspace{${1:-1}em}
endsnippet

snippet hsp "hspace" iA
\hspace{${1:3}em}
endsnippet

snippet src "source links" bA
\src{
	\link{$1}{$2} |
}
endsnippet

snippet lnk "link" wA
\link{$1}{$2}
endsnippet

snippet py "link" bA
\linkpy{$1}
endsnippet

snippet mti "multicolum" wA
\begin{multicols}{2}
	${1:${VISUAL}}
\end{multicols}
endsnippet

# ╦┌┐┌┬  ┬┌┐┌┌─┐  ╔╦╗┌─┐─┐ ┬┌┬┐
# ║││││  ││││├┤    ║ ├┤ ┌┴┬┘ │
# ╩┘└┘┴─┘┴┘└┘└─┘   ╩ └─┘┴ └─ ┴

snippet wrf "definition" wA
\dd{$1}:
endsnippet

snippet bcd "web link definition" wA
\dl{$1}{$2}:
endsnippet

snippet vup "italic definition" wA
\dt{$1}: $0
endsnippet

snippet prn "(context)" wA
\prn{$1} $0
endsnippet

snippet dlink "down link" wA
\dlink{$1}{$2}
endsnippet

snippet ulink "up link" wA
\ulink{$1}{$2}
endsnippet

snippet ct1 "primary" wA
\1{${1:${VISUAL}}}
endsnippet

snippet ct2 "primary-1" wA
\2{${1:${VISUAL}}}
endsnippet

snippet ct3 "primary-2" wA
\3{${1:${VISUAL}}}
endsnippet

snippet aset "accent" wA
\aset{${1:${VISUAL}}}
endsnippet

snippet aseg "accent" wA
\aseg{${1:${VISUAL}}}
endsnippet

snippet ctr "positive" wA
\RR{${1:${VISUAL}}}
endsnippet

snippet ctb "negative" wA
\BB{${1:${VISUAL}}}
endsnippet

snippet ctm "independent" wA
\MM{${1:${VISUAL}}}
endsnippet

snippet cty "dependent" wA
\YY{${1:${VISUAL}}}
endsnippet

snippet ctp "number" wA
\PP{${1:${VISUAL}}}
endsnippet

snippet ctf "false" wA
\FF{${1:${VISUAL}}}
endsnippet

snippet ctt "true" wA
\TT{${1:${VISUAL}}}
endsnippet

snippet `` "quotes" wA
\`\`$1'' $0
endsnippet

snippet *it "italic" iA
\textit{$1} $0
endsnippet

snippet *bf "bold" iA
\textbf{$1} $0
endsnippet


# ╔╦╗┌─┐┌┬┐┬ ┬
# ║║║├─┤ │ ├─┤
# ╩ ╩┴ ┴ ┴ ┴ ┴

context "math()"
snippet *t "text" iA
\text{$1}
endsnippet

snippet nio "inline math" wA
\($1\)$0
endsnippet

priority 1
context "math()"
snippet '([  ]{2}ss)' "space" wrA
 \quad $0
endsnippet

priority 2
context "math()"
snippet '([  ]{3,}ss)' "more space" wrA
 \qquad $0
endsnippet

snippet deq "Display Math" wA
\[%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	$0
\]%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
endsnippet

context "math()"
snippet ~= "approx" iA
\approx
endsnippet

context "math()"
snippet thn "then" iA
\then
endsnippet

context "math()"
snippet sif "then" iA
\given
endsnippet

context "math()"
snippet sgiv "spaced given" wA
\qquad \given $0
endsnippet

context "math()"
snippet ,s "spaced post comma" iA
, \quad
endsnippet

context "math()"
snippet &giv "alinged given" wA
&& \given $0
endsnippet

context "math()"
snippet dsps "display style" iA
\displaystyle $0
endsnippet

snippet dsps "display style" iA
\(\displaystyle $1 \) $0
endsnippet

context "math()"
snippet deg "degree" iA
^\circ
endsnippet

context "math()"
snippet *o "composition" iA
\circ
endsnippet

context "math()"
snippet '(\d*\.?\d*)bthm' "by theorem" wrA
\quad \dt{by theorem `!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\d*\.?\d*)bdef' "by definition" wrA
\quad \dt{by definition `!p snip.rv = match.group(1)`}
endsnippet

snippet prf "proof" bA

\dt{Proof.}
\begin{align*}
	${1: x &= y }
\end{align*}
endsnippet

snippet iprf "inductive proof" bA

\dt{Proof.}\\\\
Base case: \\($1\\) \\\\
Inductive hypothesis: \\(\\displaystyle
$2
\then
$3
\\)

Inductive case:
\begin{align*}
	&$3 \\\\
	&= \BB{$4} & \\text{\BB{by I.H.}} \\\\
	&=
	& \\qed
\end{align*}
endsnippet

context "math()"
snippet byih "byIH" iA
&= \BB{$1} & \\text{\BB{by I.H.}} \\\\
endsnippet

snippet '(\d*\.?\d*)thm' "theorem" brA
\dd{Theorem `!p snip.rv = match.group(1)`}:
endsnippet

context "math()"
snippet '([A-Za-z]*)ddx' "ddx" wrA
\\frac{d`!p snip.rv = match.group(1)`}{dx} $0
endsnippet

context "math()"
snippet '([A-Za-z]*)ddy' "ddy" wrA
\\frac{d`!p snip.rv = match.group(1)`}{dy} $0
endsnippet

context "math()"
snippet '([A-Za-z]*)ddt' "ddt" wrA
\\frac{d`!p snip.rv = match.group(1)`}{dt} $0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet VAV "diagonlized A" iA
\bm{V\Lambda V}^{-1}
endsnippet

context "math()"
snippet UAU "orthonormal diagonlized A" iA
\bm{U\Lambda U}^{-1}
endsnippet

context "math()"
snippet cvc "column vector" iA
\begin{bmatrix} $1 \\\\ $2 \\\\ $3 \end{bmatrix}
endsnippet

context "math()"
snippet mtx "matrix" iA
\\begin{bmatrix}
	$1 & $2 & $3 \\\\
	$4 & $5 & $6 \\\\
	$7 & $8 & $9
\\end{bmatrix}
endsnippet

context "math()"
snippet imx "matrix" iA
\\begin{bmatrix}
	1 & 0 & 0 \\\\
	0 & 1 & 0 \\\\
	0 & 0 & 1
\\end{bmatrix}
endsnippet

context "math()"
snippet 2mx "2x2 matrix" iA
\\begin{bmatrix}
	$1 & $2 \\\\
	$3 & $4
\\end{bmatrix}$0
endsnippet

context "math()"
snippet amx "matrix" iA
\\begin{bmatrix}[ccc|c]
	$1 & $2 & $3 & $4 \\\\
	$5 & $6 & $7 & $8 \\\\
	$9 & $10 & $11 & $12
\\end{bmatrix}
endsnippet

priority 100
context "math()"
snippet '([A-Za-z]*)bm' "bold face" wrA
\\bm{`!p snip.rv = match.group(1)`}
endsnippet

priority 200
context "math()"
snippet '([A-Za-z]*)ibm' "bold face inverse" wrA
\\bm{`!p snip.rv = match.group(1)`}^{-1}
endsnippet

priority 300
context "math()"
snippet '([A-Za-z]*)cibm' "bold face complex inverse" wrA
\\bm{`!p snip.rv = match.group(1)`}^{\t}
endsnippet

priority 400
context "math()"
snippet '([A-Za-z]*)tbm' "bold face transpose" wrA
\\bm{`!p snip.rv = match.group(1)`}^T $0
endsnippet

snippet '([A-Za-z]*)tbm' "bold face math inline" wrA
\\tbm{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet .t "transpose" iA
^T $0
endsnippet

context "math()"
snippet .ct "complex transpose" iA
^{\t} $0
endsnippet

snippet 'R(\d|n|m)' "dimension in R" wrA
\(\R^`!p snip.rv = match.group(1)`\) $0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet symp "sympyblock " wA
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

context "math()"
snippet != "equals" iA
\neq
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet ()) "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lrp "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lrs "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet <>> "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

priority 10
context "math()"
snippet sum "sum" wA
\sum_{${1:n=1}}^{${2:\infty}} $0
endsnippet

priority 100
context "math()"
snippet '(k|n)(sum|prod)' "1 to k sum" riA
\\`!p snip.rv = match.group(2)`_{i=1}^{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet prod "product" iA
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet taylor "taylor" iA
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" iA
\lim_{n \to \infty} $0
endsnippet

context "math()"
snippet eval "evaluated at" iA
\bigg|_{$1}^{$2} $0
endsnippet

context "math()"
snippet limsup "limsup" iA
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet part "d/dx" iA
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

priority 100
context "math()"
snippet root "\sqrt{}" iA
\sqrt{$1}
endsnippet

priority 200
context "math()"
snippet nroot "\sqrt{}" iA
\sqrt[${1:n}]{$2}
endsnippet

context "math()"
snippet '(f|g|h|E)o(x|X|y|Y|z|Z)' "function" irA
`!p snip.rv = match.group(1)`(`!p snip.rv = match.group(2)`)
endsnippet

context "math()"
snippet inv "^{-1}" iA
^{-1}
endsnippet

context "math()"
snippet ^^ "to the ... power" iA
^{$1} $0
endsnippet

context "math()"
snippet ^- "to the ... - power" iA
^{-$1}
endsnippet

context "math()"
snippet ^) "to the ... power" iA
^{($1)} $0
endsnippet

snippet __ "subscript" iA
_{$1} $0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet >= "greater than eq" iA
\geq
endsnippet

context "math()"
snippet <= "less than eq" iA
\leq
endsnippet

priority 100
context "math()"
snippet EE "exists" iA
\exists
endsnippet

priority 200
context "math()"
snippet nEE "nexists" iA
\nexists
endsnippet

context "math()"
snippet fall "forall" iA
\forall
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla
endsnippet

context "math()"
snippet xx "cross" iA
\times
endsnippet

snippet *. "cdot" iA
\cdot $0
endsnippet

context "math()"
snippet norm "norm" iA
\norm{$1} $0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|tan|sec|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`$0
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|mu|zeta|int|id)' "ln" rwA
\\`!p snip.rv = match.group(1)`$0
endsnippet

context "math()"
snippet '(?<!\\)(det|tr|rank)' "operators" rwA
\\`!p snip.rv = match.group(1)`{\bm{$1}} $0
endsnippet

snippet '(?<!\\)(a)(true|false)' "boolean" rwA
\\`!p snip.rv = match.group(2)`{`!p snip.rv = match.group(2)`}: $0
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto
endsnippet

context "math()"
snippet ,dx "dx" iA
\, dx
endsnippet

context "math()"
snippet bdd "boxed" wA
\boxed{
endsnippet

snippet >> ">>" iA
\gg
endsnippet

context "math()"
snippet +- "plus minus" iA
\pm
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\sim
endsnippet

snippet !~ "~" iA
\nsim
endsnippet

context "math()"
snippet || "mid" iA
\mid
endsnippet

context "math()"
snippet bset "subset" Ai
\subset
endsnippet

context "math()"
snippet sset "subset" Ai
\\{ $1 \\}$0
endsnippet

context "math()"
snippet pset "set" Ai
\supset
endsnippet

context "math()"
snippet inr "in R" iA
\in \R
endsnippet

context "math()"
snippet inz "in Z" iA
\in \Z
endsnippet

context "math()"
snippet inf "in F" iA
\in \F
endsnippet

context "math()"
snippet inn "in N" iA
\in \N
endsnippet

context "math()"
snippet inx "in X" iA
\in X
endsnippet

context "math()"
snippet notin "not in " iA
\not\in
endsnippet

context "math()"
snippet not| "not divide " iA
\not|
endsnippet

context "math()"
snippet sor "cup" iA
\cup
endsnippet

context "math()"
snippet mod "modulus" wA
\bmod
endsnippet

context "math()"
snippet sand "cap" iA
\cap
endsnippet

context "math()"
snippet lor "or" wA
\lor
endsnippet

context "math()"
snippet qed "qed" wA
\qed
endsnippet

context "math()"
snippet == "equiv" wA
\equiv
endsnippet

context "math()"
snippet !== "equiv" wA
\not\equiv
endsnippet

context "math()"
snippet ltab "truth table" bA
\begin{array}{|ll|c|}
	\hline
	a & b & (a \lor b) \\\\
	\hline
	1 & 1 & 1 \\\\
	1 & 0 & 1 \\\\
	0 & 1 & 1 \\\\
	0 & 0 & 0 \\\\
	\hline
\end{array}
endsnippet

context "math()"
snippet land "land" wA
\land
endsnippet

context "math()"
snippet xor "lnot" wA
\oplus
endsnippet


context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "math text" iA
~\text{$1}~$0
endsnippet

context "math()"
snippet t&t "align text" iA
&& \text{$1} \\\\$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1,			& $2, \\\\
	${3:0}, & \text{else}
\end{cases}
endsnippet

snippet "([\d]+)si" "SI" wrA
\SI{`!p snip.rv=match.group(1)`$1}{$2} $0
endsnippet

snippet "([\d]+)num" "num" wrA
\num{`!p snip.rv=match.group(1)`$1}
endsnippet

snippet "([\d]+)cc" "SI celsius" wrA
\SI{`!p snip.rv=match.group(1)`}{\celsius} $0
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

priority 10
context "math()"
snippet "overline" "overline" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])(bar|overline)" "bar" riA
\\`!p snip.rv = match.group(2)`{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

# ╔═╗┬─┐┌─┐┌─┐┬┌─
# ║ ╦├┬┘├┤ ├┤ ├┴┐
# ╚═╝┴└─└─┘└─┘┴ ┴

snippet @a "alpha" iA
\alpha
endsnippet

snippet @b "beta" iA
\beta
endsnippet

snippet @g "gamma" iA
\gamma
endsnippet

snippet @G "Gamma" iA
\Gamma
endsnippet

snippet @d "delta" iA
\delta
endsnippet

snippet @D "Delta" iA
\Delta
endsnippet

snippet @e "epsilon" iA
\epsilon
endsnippet

snippet @ve "varepsilin" iA
\varepsilon
endsnippet

snippet @z "zeta" iA
\zeta
endsnippet

snippet @t "theta" iA
\theta
endsnippet

snippet tau "tau" iA
\tau
endsnippet

snippet @T "Theta" iA
\Theta
endsnippet

snippet @i "iota" iA
\iota
endsnippet

snippet @k "kappa" iA
\kappa
endsnippet

snippet @l "lambda" iA
\lambda
endsnippet

snippet @L "Lambda" iA
\Lambda
endsnippet

snippet @n "nu" iA
\nu
endsnippet

snippet @x "xi" iA
\xi
endsnippet

snippet @X "Xi" iA
\Xi
endsnippet

snippet @p "phi" iA
\phi
endsnippet

snippet @P "Phi" iA
\Phi
endsnippet

snippet @r "rho" iA
\rho
endsnippet

snippet @s "sigma" iA
\sigma
endsnippet

snippet @S "Sigma" iA
\Sigma
endsnippet

snippet @u "upsilon" iA
\upsilon
endsnippet

snippet @U "Upsilon" iA
\Upsilon
endsnippet

snippet @c "chi" iA
\chi
endsnippet

snippet @C "Chi" iA
\Chi
endsnippet

snippet @y "psi" iA
\psi
endsnippet

snippet @Y "Psi" iA
\Psi
endsnippet

snippet @o "omega" iA
\omega
endsnippet

snippet @O "omega" iA
\Omega
endsnippet


# ┌─┐┬┌─┐┬ ┬┬─┐┌─┐┌─┐
# ├┤ ││ ┬│ │├┬┘├┤ └─┐
# └  ┴└─┘└─┘┴└─└─┘└─┘

snippet 2dgraph "2d graph" bA
\begin{center}
\begin{tikzpicture}
	\begin{axis}[
		height=7cm,
		width=12cm,
		xmin=-10,ymin=-10,
		xmax=10,ymax=10,
		samples=100,
		axis lines = center,
		axis line style=<->,
		xlabel = {\(x\)},
		ylabel = {\(f(x)\)},
		ticklabel style = {font=\scriptsize},
		]
		\addplot[blue+1, thick, domain=-0.5:0] (x,2*x);
		\addplot[red+1,  thick, domain=-10:-0.5] (x, 0*x);
		\addplot[red+1,  thick, domain=0:10] (x, 0*x);
	\end{axis}
\end{tikzpicture}
\end{center}
endsnippet

# vim:ft=snippets
