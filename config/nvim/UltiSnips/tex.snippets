global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

# ╔╗ ┌─┐┌─┐┬┌─┐┌─┐
# ╠╩╗├─┤└─┐││  └─┐
# ╚═╝┴ ┴└─┘┴└─┘└─┘
snippet template "Basic template" bA
\documentclass{nosvagor-notes}
\usepackage{nosvagor-math}
\usepackage{nosvagor-commands}

\colorlet{title-color}{${1:red}}
\newcommand{\theTitle}{%
	\href{https://github.com/nosvagor/notes/tree/main/${2:fire}/${3:calculus}}%
	{${4:Title}}%
}

\begin{document}

$0

\end{document}
endsnippet

snippet chkk "annoying chktex" bA
% chktex-file 1
% chktex-file 3
% chktex-file 21
% chktex-file 36
% chktex-file 27
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet sec "section" bA
\section{$1}
\begin{itemize}
	\item []

	$2
\end{itemize}

$0
endsnippet

snippet ssec "subsection" bA
\subsection{$1}
\begin{itemize}
	\item
\end{itemize}

$0
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}

endsnippet

snippet awi "answer" bA
\begin{itemize}\color{foreground}
	\item $0
\end{itemize}

endsnippet

snippet awa "answer align" bA
\fg{\begin{align*}
	$1
\end{align*}}
endsnippet

snippet daq "answer align" bA
\fg{\[
	$1
\]}
endsnippet

snippet -- "\item" bA
\item $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet vsp "vsapce" bA
\vspace{${1:-30}pt}
endsnippet

snippet src "source links" bA
\src{
	\link{$1}{$2} |
}
endsnippet

snippet lnk "link" wA
\link{$1}{$2} |
$0
endsnippet

snippet mti "multicolum" wA
\begin{multicols}{2}
	${1:${VISUAL}}
\end{multicols}
endsnippet

# ╦┌┐┌┬  ┬┌┐┌┌─┐  ╔╦╗┌─┐─┐ ┬┌┬┐
# ║││││  ││││├┤    ║ ├┤ ┌┴┬┘ │
# ╩┘└┘┴─┘┴┘└┘└─┘   ╩ └─┘┴ └─ ┴

snippet bcd "definition" wA
\dd{$1}: $0
endsnippet

snippet prn "(context)" wA
\prn{$1} $0
endsnippet

snippet dli "dlink" wA
\dlink{${1}}{${2:${VISUAL}}}
endsnippet
snippet uli "ulink" wA

\ulink{${1}}{${2:${VISUAL}}}
endsnippet

snippet ct1 "primary" wA
\1{${1:${VISUAL}}}
endsnippet

snippet ct2 "primary-1" wA
\2{${1:${VISUAL}}}
endsnippet

snippet ct3 "primary-2" wA
\3{${1:${VISUAL}}}
endsnippet

snippet aset "accent" wA
\aset{${1:${VISUAL}}}
endsnippet

snippet aseg "accent" wA
\aseg{${1:${VISUAL}}}
endsnippet

snippet ctr "positive" wA
\RR{${1:${VISUAL}}}
endsnippet

snippet ctb "negative" wA
\BB{${1:${VISUAL}}}
endsnippet

snippet ctm "independent" wA
\MM{${1:${VISUAL}}}
endsnippet

snippet cty "dependent" wA
\YY{${1:${VISUAL}}}
endsnippet

snippet ctp "number" wA
\PP{${1:${VISUAL}}}
endsnippet

snippet ctf "false" wA
\FF{${1:${VISUAL}}}
endsnippet

snippet ctt "true" wA
\TT{${1:${VISUAL}}}
endsnippet

snippet `` "quotes" wA
\`\`$1'' $0
endsnippet

snippet \it "italic" wA
\textit{$1}
endsnippet

snippet \bf "bold" wA
\textbf{$1}
endsnippet

# ╔╦╗┌─┐┌┬┐┬ ┬
# ║║║├─┤ │ ├─┤
# ╩ ╩┴ ┴ ┴ ┴ ┴

snippet nio "Inline Math" wA
\( ${1:${VISUAL}} \)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet deq "Display Math" wA

\[
${1:${VISUAL}}
\]
endsnippet

context "math()"
snippet por "colored or notation" iA
\por{$1}{$2} $0
endsnippet

context "math()"
snippet or "lor" iA
\lor $0
endsnippet

context "math()"
snippet pand "colored and notation" iA
\pand{$1}{$2} $0
endsnippet

context "math()"
snippet pand "colored or notation" iA
\land $0
endsnippet

context "math()"
snippet deg "degree" iA
^\circ
endsnippet

context "math()"
snippet ddx "derivative" iA
\\frac{d$1}{d${2:x}} $0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet cvec "column vector" iA
\begin{bmatrix} $1 \\\\ $2 \\\\ $3 \end{bmatrix}
endsnippet

context "math()"
snippet mtx "matrix" iA
\\begin{bmatrix}
$1 & $2 & $3 \\\\
$4 & $5 & $6 \\\\
$7 & $8 & $9
\\end{bmatrix}
endsnippet

context "math()"
snippet amx "matrix" iA
\\begin{bmatrix}[ccc|c]
$1 & $2 & $3 & $4 \\\\
$5 & $6 & $7 & $8 \\\\
$9 & $10 & $11 & $12
\\end{bmatrix}
endsnippet

context "math()"
snippet bm "bold face" iA
\bm{$1}
endsnippet

snippet tbm "bold face math inline" wA
\tbm{$1}
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

snippet == "equals" iA
&=
endsnippet

snippet != "equals" iA
\neq
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

context "math()"
snippet sum "sum" iA
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet taylor "taylor" iA
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" iA
\lim_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet limsup "limsup" iA
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

context "math()"
snippet prod "product" iA
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" iA
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet inv "^{-1}" iA
^{-1}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet EE "geq" iA
\exists
endsnippet

context "math()"
snippet AA "forall" iA
\forall
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla
endsnippet

context "math()"
snippet xx "cross" iA
\times
endsnippet

priority 100
snippet ** "cdot" iA
\cdot
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|tan|sec|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`($1)
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`($1)
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\sim
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

context "math()"
snippet || "mid" iA
\mid
endsnippet

context "math()"
snippet sset "subset" Ai
\subset
endsnippet

context "math()"
snippet inn "in" iA
\in
endsnippet

context "math()"
snippet notin "not in " iA
\not\in
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet Nn "cap" iA
\cap
endsnippet

context "math()"
snippet UU "cup" iA
\cup
endsnippet

context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft
endsnippet

context "math()"
snippet <> "hokje" iA
\diamond
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet


priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

# ╔═╗┬─┐┌─┐┌─┐┬┌─
# ║ ╦├┬┘├┤ ├┤ ├┴┐
# ╚═╝┴└─└─┘└─┘┴ ┴

snippet @a "alpha" wA
\alpha
endsnippet

snippet @b "beta" wA
\beta
endsnippet

snippet @g "gamma" wA
\gamma
endsnippet

snippet @G "Gamma" wA
\Gamma
endsnippet

snippet @d "delta" wA
\delta
endsnippet

snippet @D "Delta" wA
\Delta
endsnippet

snippet @e "epsilon" wA
\epsilon
endsnippet

snippet @ve "varepsilin" wA
\varepsilon
endsnippet

snippet @z "zeta" wA
\zeta
endsnippet

snippet @t "theta" wA
\theta
endsnippet

snippet @T "Theta" wA
\Theta
endsnippet

snippet @i "iota" wA
\iota
endsnippet

snippet @k "kappa" wA
\kappa
endsnippet

snippet @l "lambda" wA
\lambda
endsnippet

snippet @L "Lambda" wA
\Lambda
endsnippet

snippet @n "nu" wA
\nu
endsnippet

snippet @x "xi" wA
\xi
endsnippet

snippet @X "Xi" wA
\Xi
endsnippet

snippet @p "phi" wA
\phi
endsnippet

snippet @P "Phi" wA
\Phi
endsnippet

snippet @r "rho" wA
\rho
endsnippet

snippet @s "sigma" wA
\sigma
endsnippet

snippet @S "Sigma" wA
\Sigma
endsnippet

snippet @u "upsilon" wA
\upsilon
endsnippet

snippet @U "Upsilon" wA
\Upsilon
endsnippet

snippet @c "chi" wA
\chi
endsnippet

snippet @C "Chi" wA
\Chi
endsnippet

snippet @y "psi" wA
\psi
endsnippet

snippet @Y "Psi" wA
\Psi
endsnippet

snippet @o "omega" wA
\omega
endsnippet

# vim:ft=snippets
