# ███████╗██╗  ██╗██╗  ██╗██╗  ██╗██████╗
# ██╔════╝╚██╗██╔╝██║  ██║██║ ██╔╝██╔══██╗
# ███████╗ ╚███╔╝ ███████║█████╔╝ ██║  ██║
# ╚════██║ ██╔██╗ ██╔══██║██╔═██╗ ██║  ██║
# ███████║██╔╝ ██╗██║  ██║██║  ██╗██████╔╝
# ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝
# →-.   →  .-'.   →  .--.   →  .--.   →  .--.   →  .-→
# →::.\::::::::.\::::::::.\::::::::.\::::::::.\::::::: → →
# → →:.\ https://github.com/nosvagor/.dotfiles \::: → →  →  →
# →::::.\::::::::.\::::::::.\::::::::.\::::::::.\::::→  →
#   → →   `--'  →   `.-'  →   `--'  →   `--'  →   `--' → →

# ╔╗ ┌─┐┌─┐┬┌─┐┌─┐
# ╠╩╗├─┤└─┐││  └─┐
# ╚═╝┴ ┴└─┘┴└─┘└─┘

# volume
XF86Audio{Raise,Lower}Volume
	pactl set-sink-volume @DEFAULT_SINK@ {+10,-10}%
super + shift + {j,period,m}
  pactl set-sink-volume @DEFAULT_SINK@ {+10,-10,0}%

# I can't figure out a better option
shift + super + control + {w,r}
  notify-send -t 3000 {connecting "bluetooth & wifi", reconnecting wifi} \
  & {wifi psu & blt, wifi psu}

# ╔═╗┌─┐┌─┐┌─┐
# ╠═╣├─┘├─┘└─┐
# ╩ ╩┴  ┴  └─┘

# terminal emulator
super + {_,shift +}Return
  {alacritty,bspc rule -a Alacritty -o state=floating rectangle=1118x1960+1361+100 && alacritty}

#browser
super + f
    firefox

#pdf
super + g
   zathura

# ╦═╗┌─┐┌─┐┬
# ╠╦╝│ │├┤ │
# ╩╚═└─┘└  ┴

# programs
super + p
	rofi -no-lazy-grab -show drun -theme ~/.config/rofi/launcher.rasi

# layouts
super + j
    ./scripts/layouts.sh

# emoji
super + z
    rofi -show emoji -modi emoji -theme ~/.config/rofi/emoji.rasi

# power
super + v
    ./scripts/powermenu.sh

# ╔╗ ┌─┐┌─┐┬ ┬┌┬┐
# ╠╩╗└─┐├─┘││││││
# ╚═╝└─┘┴  └┴┘┴ ┴

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close/kill node
super + {_,shift + }x
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + y
	bspc desktop -l next

# set the window state
super + {m,k}
	bspc node -t {tiled,floating}

# focus the node in the given direction
super + {n,i,u,o}
 	bspc node -f {west,south,north,east}.local

super + {Left,Down,Up,Right}
 	bspc node -f {west,south,north,east}.local

# moved focused window to prev/next desktop then switch
super + shift + {e,t}
  DIR={prev,next}; \
  bspc node -d "$DIR"; \
  bspc desktop -f "$DIR"

# switch destkops
super + {e,t}
  DIR={prev,next}; \
	bspc desktop -f "$DIR"

# makeshift tab swap
super + h
	bspc node -s south; bspc node -f north

# ╔╦╗┌─┐┬┌┬┐
# ║║║├─┤││││
# ╩ ╩┴ ┴┴┴ ┴

# selection then copy to clipboard
super + b
	maim -s -u | xclip -selection clipboard -t image/png

#selection then save
super + c
	maim -s -u ~/screenshots/$(date +%m-%d-%y__%H':'%M':'%S).png && \
  notify-send -u low -t 3000 "selected area" "screenshot saved"

#screenshot of active window
super + d
	maim -u -i $(xdotool getactivewindow) ~/screenshots/$(date +%m-%d-%y__%H':'%M':'%S).png && \
  notify-send -u low -t 3000 "active window" "screenshot saved"

#screensshot of entire screen
super + comma
	maim -u ~/screenshots/$(date +%m-%d-%y_%H':'%M':'%S).png && \
  notify-send -u low -t 3000 "entire screen" "screenshot saved"

# ╔═╗┌─┐┌┬┐┌─┐┌─┐┌─┐
# ╠╣ ├┤ │││├─┘├┤ │ ┬
# ╚  └  ┴ ┴┴  └─┘└─┘

# stop ffmpeg
ctrl + shift + super + c
	killall --user $USER  --ignore-case  --signal INT  ffmpeg & notify-send -u Critical -t 3000 ended Recording

# generate gif of selected area
ctrl + shift + super + b
	~/scripts/gif.sh
